/* 83cf1cd6a23f678a77261b30991dbf08bc865669
 * This file is automatically generated by graphql-let. */

import * as Types from '../../../__types__';

import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
const defaultOptions = {} as const;
export type DeleteAddressMutationVariables = Types.Exact<{
  id: Types.Scalars['ID']['input'];
}>;


export type DeleteAddressMutation = { __typename?: 'Mutation', deleteAddress: { __typename?: 'Address', id: string, title?: string | null, type?: string | null, default?: boolean | null, address?: { __typename?: 'UserAddress', country?: string | null, city?: string | null, state?: string | null, zip?: string | null, street_address?: string | null } | null, location?: { __typename?: 'GoogleMapLocation', lat?: number | null, lng?: number | null, street_number?: string | null, route?: string | null, street_address?: string | null, city?: string | null, state?: string | null, country?: string | null, zip?: string | null, formattedAddress?: string | null } | null } };


export const DeleteAddressDocument = gql`
    mutation DeleteAddress($id: ID!) {
  deleteAddress(id: $id) {
    id
    title
    type
    default
    address {
      country
      city
      state
      zip
      street_address
    }
    location {
      lat
      lng
      street_number
      route
      street_address
      city
      state
      country
      zip
      formattedAddress
    }
  }
}
    `;
export type DeleteAddressMutationFn = Apollo.MutationFunction<DeleteAddressMutation, DeleteAddressMutationVariables>;

/**
 * __useDeleteAddressMutation__
 *
 * To run a mutation, you first call `useDeleteAddressMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteAddressMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteAddressMutation, { data, loading, error }] = useDeleteAddressMutation({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useDeleteAddressMutation(baseOptions?: Apollo.MutationHookOptions<DeleteAddressMutation, DeleteAddressMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteAddressMutation, DeleteAddressMutationVariables>(DeleteAddressDocument, options);
      }
export type DeleteAddressMutationHookResult = ReturnType<typeof useDeleteAddressMutation>;
export type DeleteAddressMutationResult = Apollo.MutationResult<DeleteAddressMutation>;
export type DeleteAddressMutationOptions = Apollo.BaseMutationOptions<DeleteAddressMutation, DeleteAddressMutationVariables>;